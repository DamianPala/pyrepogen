PYTHON     := python
RM		   := rm
TEST_PATH  := ./tests


ifeq (format,$(firstword $(MAKECMDGOALS)))
FORMAT_ARGS := $(wordlist 2,$(words $(MAKECMDGOALS)),$(MAKECMDGOALS))
$(eval $(FORMAT_ARGS):;@:)
endif


default: prepare

requirements:
	@echo "Repository requirements:"
	@echo "    1. Required Python version: {{min_python}}"
	@echo "    2. Installed Pip"

prepare:
	@$(PYTHON) -m pip install -r requirements-dev.txt
	@$(PYTHON) -m pip install -r requirements.txt

release:
	@$(PYTHON) -m repoassist release
	
test:
	@$(PYTHON) -m pytest $(TEST_PATH) --color=yes
	
tox:
	@tox

lint:
	@$(PYTHON) -m flake8
	
#TODO:
doc:
	@$(PYTHON) -m flake8

coverage:
	@coverage run -m pytest $(TEST_PATH) --color=yes && ([ $$? -eq 0 ]) || echo ""
	@coverage html
	@coverage report -m

install_reqs:
	@$(PYTHON) -m pip install --user -r requirements.txt

update_reqs:
	@$(PYTHON) -m repoassist update_reqs

{% block cloud_targets %}{% endblock %}
format:
	@$(PYTHON) -m repoassist format $(FORMAT_ARGS)

clean:
#TODO: pycache ant pytest casche clean
	$(RM) -rf build/
	$(RM) -rf dist/
	$(RM) -rf *.egg-info
	$(RM) -rf AUTHORS
	$(RM) -rf ChangeLog

help:
	@echo "Usage:"
	@echo "	make <target> [flags...]"
	@echo
	@echo "Targets:"
	@echo "make requirements"
	@echo "	List necessary repository requirements."
	@echo "make prepare"
	@echo "	Prepare a development environment based on the requirements.txt and requirements-dev.txt, use only once"
	@echo "make release"
	@echo "	Release the standalone script"
	@echo "make test"
	@echo "	Run tests"
	@echo "make tox"
	@echo "	Run tox"
	@echo "make lint"
	@echo "	Run linter"
	{% block cloud_targets_help %}{% endblock %}
	@echo "make clean"
	@echo "	Clean build and distribution"
	

.PHONY: default prepare release install test lint clean format help
